pipeline{
    agent {
      label "linuxbuildslave1"
    }
    stages{
        stage('SCM'){
            steps{
                git 'https://github.com/krishna-gbu/jenkins-docker-maven-java-webapp.git'
            }
        }
        stage('Build by Maven'){
            steps{
                sh 'mvn clean package'
            }
        }
         stage('Build docker own image'){
            steps{
                sh "sudo docker build -t krish00/javaweb:${BUILD_TAG} ."
                // sh 'pwd'
                // sh 'ls'
            }
        }
         stage('push Image to Docker hub'){
            steps{
                withCredentials([string(credentialsId: 'DOCKER_HUB_PASS', variable: 'DOCKER_HUB_PASS_CODE')]) {
                  sh "sudo docker login -u krish00 -p ${DOCKER_HUB_PASS_CODE}"
                }
                sh "sudo docker push krish00/javaweb:${BUILD_TAG}"
               
            }
        }
        stage('Deploy webApp in DEV Env'){
            steps{
               sh "sudo docker rm -f myjavaApp"
               sh "sudo docker run -d -p 8080:8080 --name myjavaApp krish00/javaweb:${BUILD_TAG}"
            }
        }
         stage('Deploy webApp in QA/test Env'){
            steps{
               sshagent(['QA_ENV_SSH_CRED']) {
                sh "ssh -o StrictHostKeyChecking=no ec2-user@13.233.20.131 sudo docker rm -f myjavaApp" 
                sh "ssh ec2-user@13.233.20.131 sudo docker run -d -p 8080:8080 --name myjavaApp krish00/javaweb:${BUILD_TAG}" 
              }
            }
        }
    }
}